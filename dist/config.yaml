project_name: belphegor
release:
  github:
    owner: labi-le
    name: belphegor
  make_latest: "true"
  name_template: v{{ .Version }}
builds:
  - id: belphegor
    goos:
      - windows
      - linux
      - darwin
    goarch:
      - amd64
      - arm
    goarm:
      - "6"
    gomips:
      - hardfloat
    goamd64:
      - v1
    targets:
      - windows_amd64_v1
      - windows_arm_6
      - linux_amd64_v1
      - linux_arm_6
      - darwin_amd64_v1
    dir: .
    main: ./cmd/cli/
    binary: belphegor
    builder: go
    mod_timestamp: '{{ .CommitTimestamp }}'
    gobinary: go
    command: build
    ldflags:
      - -s -w -extldflags '-static'
      - -X {{ .ModulePath }}/internal.Version={{ .Version }}
      - -X {{ .ModulePath }}/internal.CommitHash={{ .Commit }}
      - -X {{ .ModulePath }}/internal.BuildTime={{ .CommitDate }}
      - '{{ if eq .Os "windows" }}-H windowsgui{{ end }}'
    tags:
      - netgo
      - osusergo
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=0
archives:
  - id: default
    name_template: '{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    format: binary
    files:
      - src: license*
      - src: LICENSE*
      - src: readme*
      - src: README*
      - src: changelog*
      - src: CHANGELOG*
nfpms:
  - file_name_template: '{{ .PackageName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    package_name: belphegor
    version_metadata: git
    recommends:
      - wl-clipboard
      - xclip
      - xsel
    id: default
    formats:
      - deb
      - rpm
      - archlinux
    vendor: labi-le
    homepage: https://github.com/labi-le/belphegor
    maintainer: labi-le <i@labile.cc>
    description: share clipboard on network
    license: MIT
    bindir: /usr/bin
    libdirs:
      header: /usr/include
      carchive: /usr/lib
      cshared: /usr/lib
snapshot:
  name_template: '{{ incpatch .Version }}-next'
checksum:
  name_template: checksums.txt
  algorithm: sha256
changelog:
  filters:
    exclude:
      - '^docs:'
      - '^test:'
  sort: asc
  format: '{{ .SHA }}: {{ .Message }} ({{ with .AuthorUsername }}@{{ . }}{{ else }}{{ .AuthorName }} <{{ .AuthorEmail }}>{{ end }})'
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
    - go mod tidy
    - go generate ./...
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ mdv2escape .ProjectName }} {{ mdv2escape .Tag }} is out{{ mdv2escape "!" }} Check it out at {{ mdv2escape .ReleaseURL }}'
    parse_mode: MarkdownV2
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
  bluesky:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
git:
  tag_sort: -version:refname
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
